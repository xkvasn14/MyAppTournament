<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACRAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADJklEQVRYR+WXTUhU
        URTHz7kzloRiiIsWQbYIXLRIGnEjqES0CcqPWQRCuZQsZiqhnbpLBB3DhWCB0aLC0QwCcxEqGKi9oIVB
        i6CWUZGiBULjPZ375sxz/Jq574krfzCcj/t87//Ovee+Kxx6UOyuNPY7VxXiFQmDofW75J2qRxLtIKeA
        pv73XYjYKWFAcCQZO98qwQ62CKjtnA6XlhZHlKZCEyOq6wB0wx0MCAG8AaIe43M1U8dK1pwnrfXr7iDj
        CWh86FQoDZPslqczBwMB/VKADaOxyJyJlZtl1Ab1ElEZX9DGtt78AOmBDO8DHMncDwncqeCqPHWHmLBY
        IIQKLsdSMlY1JClo7FsMK4X3JQyEBv1hPF41IyE09zsXuO4tEm5WwDycAM9FB5eKJAWKQt/EDQwCbr0H
        Qg1X+YtEmwI0wFsWUahT63WSgp+rq/sWwBXw7tGQWDzLphxBTaQzWQJCYZ3kuVlnEXclBbPd9Sk2gUXw
        vP/5vfz3s4QQQnXTWK3osZtgPAGj7dXfuVzP2a1rSjiX01l3bcyL6x/EOXkJt8uIwLT0zPjtiCfKE2Ao
        SFGHaRN2h80fuEmiWdcGAElPGRsdXDjBe8tL42sFbcZm8PaBDNGEU6OJJlk9dwgOodafeAcZlmFfaKBb
        CtQpfqkWflAZaLrG23JShl12CDA09S1EUIV62fUWZABM6d02T696jI/FIq9NnM2uAjIYIfz2FUiqmq9s
        l7QlNMGLeop3vaUfy2vzmbWwnZwCsmlOONNsLCtCKwUpPPPsXsSsp5xsWYS54JbqFjcvGrDH5uEGawFj
        7naKIxLmwikuWUuInxdrAYZ/pOJcC6+Ht2NaOEShaPbnNh++BLyKV65gWLtfNdkvPEjrDkX64ot4pa+d
        03oRbocX5Vc23tmB3/y034cbfFXgIAgugPSA6YzMjyd9RUZ84WsKGgbmTx7RR71DzF74mQprAebAWna8
        aJlPyd6BZS+QNipH49UfJcyJ9RSY07LNww18srL+hlgL4Naz/zAh1oqXF2sBfOElcW2wFmu9BviUNMkX
        u/+w2MD7QmuQfeGwAfAf4BcdigsjUOUAAAAASUVORK5CYII=
</value>
  </data>
</root>